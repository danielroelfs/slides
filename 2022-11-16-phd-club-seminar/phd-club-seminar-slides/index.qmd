---
title: "Enhancing plots in `{ggplot2}`"
author: "Daniel Roelfs" 
format:
  revealjs:
    theme: style.scss
    transition: slide
    background-transition: slide
    controls: true
    controls-layout: bottom-right
    highlight-style: atom-one-dark
revealjs-plugins:
  - pointer
  - fontawesome
editor: source
editor_options:
  chunk_output_type: console
knitr:
  opts_chunk:
    dev: "ragg_png"
    retina: 3
    dpi: 200
execute:
  freeze: auto
  echo: true
  fig-width: 7
  fig-height: 4
include-in-header:
  text: <script defer src="https://web-analytics.danielroelfs.app/script.js" data-website-id="c5dc13e7-2365-4718-bc11-6da594f9c581"></script>
# for settings see: https://quarto.org/docs/reference/formats/presentations/revealjs.html
---

```{r}
#| label: pkgs
#| include: false

library(tidyverse)
library(scico)
library(ggtext)
library(patchwork)
```

-------------------------------------------------------------------------------

::: {.center-y style="width: 70%; margin-left: 2vw"}
_"It would be great if you could share your experience about plotting in R environment - how to make plots that are not only good at displaying results but visually satisfying at the same time."_
<br><br>
**-- Heemin**
:::

::: {.chapter .center}
## Chapter 1
### Picking the right tool
:::

-------------------------------------------------------------------------------

::: {.center-xy}
![{ggplot2}](https://raw.githubusercontent.com/rstudio/hex-stickers/master/SVG/ggplot2.svg){.no-shadow width="150" fig-alt="ggplot2 hex sticker" style="margin: 2vmin"}
![`plotnine`](https://plotnine.readthedocs.io/en/stable/_images/logo-540.png){.no-shadow width="150" fig-alt="plotnine logo" style="margin: 2vmin"}
![`matplotlib`](https://matplotlib.org/stable/_images/sphx_glr_logos2_003_2_0x.png){.no-shadow width="250" fig-alt="matplotlib logo" style="margin: 2vmin"}
:::

-------------------------------------------------------------------------------

::: {.center-y}
| ![{ggplot2}](https://raw.githubusercontent.com/rstudio/hex-stickers/master/SVG/ggplot2.svg){.no-shadow width="100" fig-alt="ggplot2 hex sticker" style="margin: 2vmin"} |      ![`plotnine`](https://plotnine.readthedocs.io/en/stable/_images/logo-540.png){.no-shadow width="100" fig-alt="plotnine logo" style="margin: 2vmin"} |  ![`matplotlib`](https://matplotlib.org/stable/_images/sphx_glr_logos2_003_2_0x.png){.no-shadow width="175" fig-alt="matplotlib logo" style="margin: 2vmin"} |
|:-----------------:|:-------------------------:|:-------------------------:|
| for {{< fa brands r-project >}}             | for {{< fa brands python >}}                | for {{< fa brands python >}}                |
| tons of [extensions](https://github.com/z3tt/awesome-ggplot2) (see also [here](https://exts.ggplot2.tidyverse.org/gallery/)) like `{ggtext}` and `{ggdist}` | access `ggplot`-like syntax in Python | powerful, but very steep learning curve |
| most popular at NORMENT | if you dislike `matplotlib` as much as I do but have to use Python | you're either very smart, or you have a stubborn supervisor |
:::

## {visibility="hidden"}

::: {.center-xy}
![`{ggplot2}` showcase](./files/ggplot-showcase.png){width="50vw" fig-alt="ggplot2 showcase"}
:::

## {visibility="hidden"}

::: {.center-xy}
![`matplotlib` showcase](./files/matplotlib-showcase.png){width="50vw" fig-alt="matplotlib showcase"}
:::

-------------------------------------------------------------------------------

::: {.center-xy}
![](https://github.com/danielroelfs/slides/blob/main/2020-02-07-ggplot_workshop/images/cat_meme.png?raw=true){.no-shadow fig-alt="cat happily looking at a waffle with the ggplot logo superimposed"}
:::

::: {.chapter .center}
## Chapter 2
### `{ggplot2}` showcase
:::

-------------------------------------------------------------------------------

::: {.center-xy}
![[German election results](https://github.com/z3tt/grid-btw-wahlkreise-constituencies) by Cédric Scherer](https://rstudio-conf-2022.github.io/ggplot2-graphic-design/materials/img/showcase/btw21_tile_grid_moon_second_de.png){height="600" fig-alt="german election results plot"}
:::

-------------------------------------------------------------------------------

::: {.center-xy}
![Generative art project called [_Generalisations_](https://art.djnavarro.net/gallery/generalisation/) by Danielle Navarro](https://djnavarro.net/series-generalisation/image/rectgenerate_1_12.png){height="600" fig-alt="generative art with squares"}
:::

-------------------------------------------------------------------------------

::: {.center-xy}
![[Chloropleth map](https://rstudio-conf-2022.github.io/ggplot2-graphic-design/materials/timogrossenbacher.ch/2019/04/bivariate-maps-with-ggplot2-and-sf) by Timo Grossenbacher](https://rstudio-conf-2022.github.io/ggplot2-graphic-design/materials/img/showcase/swiss_map.png){height="600" fig-alt="german election results plot"}
:::

-------------------------------------------------------------------------------

::: {.center-y style="width: 70%;margin-left: 2vw"}
_"Okay these are cool,<br>but what about actually useful plots?"_
<br><br>
**-- _you, probably_**
:::

-------------------------------------------------------------------------------

::: {.center-xy}
![Collection of graphs from the [BBC](https://bbc.github.io/rcookbook/)](https://rstudio-conf-2022.github.io/ggplot2-graphic-design/materials/img/showcase/bbc-gallery.png){width="50vw" fig-alt="bbc plot collection"}
:::

-------------------------------------------------------------------------------

::: {.center-xy}
![[dN/Ds ratio in oxytocin pathway genes map](https://osf.io/42b8g/) by Alina Sartorius](./files/plot-dnds-ratio-oxytocin-pathway.png){height="60vh" fig-alt="dn/ds ratio in oxytocin pathway genes"}
:::

-------------------------------------------------------------------------------

::: {.center-xy}
![Plot from [an article](https://doi.org/10.1016/j.nicl.2022.103181) by Natalia Tesli using the [`{ggseg}`](https://ggseg.github.io/ggseg/) package](https://www.ncbi.nlm.nih.gov/pmc/articles/instance/9474919/bin/gr1.jpg){height="600" fig-alt="brain age correlation plot"}
:::

-------------------------------------------------------------------------------

::: {.center-xy}
![Plot from [a preprint](https://doi.org/10.1016/j.nicl.2022.103181) by Linn Sofie Sæther](https://www.medrxiv.org/content/medrxiv/early/2022/08/25/2022.08.25.22279209/F1.large.jpg?width=800&height=600&carousel=1){height="600" fig-alt="immune marker covariance plot"}
:::

-------------------------------------------------------------------------------

::: {.center-xy}
![Plot from [an article ](https://doi.org/10.1038/s41386-022-01305-5) by Jarek Rokicki](./files/plot-oxytocin-expression-patterns.jpeg){height="600" fig-alt="collection of plots on oxytocin patterns"}
:::

::::: {.chapter .center style="width: 100%; margin-left: 0;"}
## Chapter 3
### How to go from A to B?

:::: {.columns}

::: {.column width="50%"}

```{r}
#| label: from-a-to-be-1
#| fig-width: 8
#| fig-height: 6
#| echo: false

palmerpenguins::penguins |> 
    ggplot(aes(x = bill_length_mm, y = bill_depth_mm, color = body_mass_g)) + 
    geom_point()
```
:::

::: {.column width="50%"}
```{r}
#| label: from-a-to-be-2
#| fig-width: 8
#| fig-height: 6
#| echo: false

palmerpenguins::penguins |> 
    ggplot(aes(x = bill_length_mm, y = bill_depth_mm, color = body_mass_g)) + 
    geom_point(alpha = .6, size = 3) + 
    ggforce::geom_mark_ellipse(aes(group = species, label = species)) +
    labs(title = "Bill size of brush-tailed penguins _Pygoscelis_",
         caption = "Data: Gorman, Williams & Fraser (2014), _PLoS ONE_", 
         x = "**Bill length** (mm)",
         y = "**Bill depth** (mm)",
         color = "**Body mass** (g)") +
    scale_x_continuous(limits = c(25, 65)) + 
    scale_y_continuous(limits = c(12, 24)) +
    scale_color_scico(palette = "bamako", direction = -1, 
                      guide = guide_colorbar(title.position = "top", title.hjust = .5, 
                                             ticks = FALSE, 
                                             barwidth = 15, barheight = 0.5)) +
    coord_cartesian(expand = FALSE, clip = "off") +
    theme_minimal() +
    theme(plot.title = element_markdown(size = 18, face = "bold"),
          plot.title.position = "plot",
          plot.caption = element_markdown(margin = margin(t = 15)), 
          plot.caption.position = "plot",
          legend.position = "top",
          legend.title = element_markdown(),
          axis.title.x = element_markdown(),
          axis.title.y = element_markdown(),
          plot.margin = margin(15, 15, 5, 15))
```
:::
::::
:::::

-------------------------------------------------------------------------------

:::: {.center-xy}
::: {style="display: block;"}
```{r}
#| label: r-setup

# R setup
library(tidyverse) # ggplot, dplyr, tidyr, etc.
library(ggtext) # fancy text
library(scico) # scientific color maps
```
<br>
```{python}
#| label: py-setup
#| eval: false

# Python setup
import pandas as pd
import numpy as np
import plotnine as gg
import matplotlib.pyplot as plt
```
:::
::::

::: {.subsection .center}
## Step 1
### Add a theme
:::

-------------------------------------------------------------------------------

::: panel-tabset
### Plot

```{r}
#| label: apply-theme
#| fig-height: 3.5
#| code-line-numbers: "4"

palmerpenguins::penguins |> 
    ggplot(aes(x = bill_length_mm, y = bill_depth_mm, color = body_mass_g)) + 
    geom_point() + 
    theme_minimal()
```

### Code

```{r}
#| label: apply-theme
#| eval: false
```
:::

::: {.subsection .center}
## Step 2
### [[C]{style="color: skyblue;"}[O]{style="color: salmon;"}[L]{style="color: yellow;"}[O]{style="color: violet;"}[R]{style="color: aqua;"}[S]{style="color: orange;"}]{style="font-size: 5vmin"}
:::

## `{viridis}`

```{r}
#| label: viridis-code
#| eval: false

scale_color_viridis() 
scale_fill_viridis()
```

![[Viridis color maps](https://cran.r-project.org/web/packages/viridis/vignettes/intro-to-viridis.html)](./files/viridis-palettes.png){height="400" style="margin-top: 1em"}

## Scientific color maps

::::: {.center style="height: 100%; width: 100%; margin-left: 0;"}
:::: {.columns}
::: {.column width="50%"}
![Color discrepancy between jet or rainbow color palette and [scientific colors](https://www.nature.com/articles/s41467-020-19160-7) by Fabio Crameri](https://media.springernature.com/lw685/springer-static/image/art%3A10.1038%2Fs41467-020-19160-7/MediaObjects/41467_2020_19160_Fig2_HTML.png?as=webp){fig-alt="cvd visualisation"}
:::

::: {.column width="50%"}
![[Scientific Color Maps](https://www.fabiocrameri.ch/colourmaps/) by Fabio Crameri](./files/crameri_scientificcolors_overview.png){height="500" fig-alt="scientific color palettes"}
:::
::::
:::::

-------------------------------------------------------------------------------

::: panel-tabset
### Plot

```{r}
#| label: apply-scico
#| fig-height: 3.5
#| code-line-numbers: "4"

palmerpenguins::penguins |> 
    ggplot(aes(x = bill_length_mm, y = bill_depth_mm, color = body_mass_g)) + 
    geom_point() + 
    scale_color_scico(palette = "bamako", direction = -1) +
    theme_minimal()
```

### Code

```{r}
#| label: apply-scico
#| eval: false
```
:::

::: {.subsection .center}
## Step 3
### Add labels
:::

-------------------------------------------------------------------------------

::: panel-tabset
### Plot

```{r}
#| label: apply-labels
#| echo: false

palmerpenguins::penguins |> 
    ggplot(aes(x = bill_length_mm, y = bill_depth_mm, color = body_mass_g)) + 
    geom_point() + 
    labs(title = "Bill size of brush-tailed penguins Pygoscelis",
         caption = "Data: Gorman, Williams & Fraser (2014) PLoS ONE", 
         x = "Bill length (mm)",
         y = "Bill depth (mm)",
         color = "Body mass (g)") +
    scale_color_scico(palette = "bamako", direction = -1) +
    theme_minimal()
```

### Code

```{r}
#| label: apply-labels
#| eval: false
```
:::

::: {.subsection .center}
## Step 3b
### ✨ Fancy labels ✨
:::

-------------------------------------------------------------------------------

::: panel-tabset
### Plot

```{r}
#| label: apply-labels-md
#| echo: false

palmerpenguins::penguins |> 
    ggplot(aes(x = bill_length_mm, y = bill_depth_mm, color = body_mass_g)) + 
    geom_point() + 
    labs(title = "Bill size of brush-tailed penguins _Pygoscelis_",
         caption = "Data: Gorman, Williams & Fraser (2014), _PLoS ONE_", 
         x = "**Bill length** (mm)",
         y = "**Bill depth** (mm)",
         color = "**Body mass** (g)") +
    scale_color_scico(palette = "bamako", direction = -1) +
    theme_minimal() + 
    theme(plot.title = element_markdown(size = 18, face = "bold"),
          plot.caption = element_markdown(margin = margin(t = 15)),
          legend.title = element_markdown(),
          axis.title.x = element_markdown(),
          axis.title.y = element_markdown())
```

### Code

```{r}
#| label: apply-labels-md
#| eval: false
```
:::

-------------------------------------------------------------------------------

::: panel-tabset
### Plot

```{r}
#| label: apply-title-align
#| echo: false

palmerpenguins::penguins |> 
    ggplot(aes(x = bill_length_mm, y = bill_depth_mm, color = body_mass_g)) + 
    geom_point() + 
    labs(title = "Bill size of brush-tailed penguins _Pygoscelis_",
         caption = "Data: Gorman, Williams & Fraser (2014) *PLoS ONE*", 
         x = "**Bill length** (mm)",
         y = "**Bill depth** (mm)",
         color = "**Body mass** (g)") +
    scale_color_scico(palette = "bamako", direction = -1) +
    theme_minimal() + 
    theme(plot.title = element_markdown(size = 18, face = "bold"),
          plot.title.position = "plot",
          plot.caption = element_markdown(margin = margin(t = 15)),
          plot.caption.position = "plot",
          legend.title = element_markdown(),
          axis.title.x = element_markdown(),
          axis.title.y = element_markdown())
```

### Code

```{r}
#| label: apply-title-align
#| eval: false
```
:::

::: {.subsection .center}
## Step 4
### Move the legend
:::

-------------------------------------------------------------------------------

::: panel-tabset
### Plot

```{r}
#| label: apply-legend
#| echo: false

palmerpenguins::penguins |> 
    ggplot(aes(x = bill_length_mm, y = bill_depth_mm, color = body_mass_g)) + 
    geom_point() + 
    labs(title = "Bill size of brush-tailed penguins _Pygoscelis_",
         caption = "Data: Gorman, Williams & Fraser (2014) *PLoS ONE*", 
         x = "**Bill length** (mm)",
         y = "**Bill depth** (mm)",
         color = "**Body mass** (g)") +
    scale_color_scico(palette = "bamako", direction = -1, 
                      guide = guide_colorbar(title.position = "top", title.hjust = .5, 
                                             ticks = FALSE,
                                             barwidth = 15, barheight = 0.5)) +
    theme_minimal() + 
    theme(plot.title = element_markdown(size = 18, face = "bold"),
          plot.title.position = "plot",
          plot.caption = element_markdown(margin = margin(t = 15)),
          plot.caption.position = "plot",
          legend.position = "top",
          legend.title = element_markdown(),
          axis.title.x = element_markdown(),
          axis.title.y = element_markdown())
```

### Code

```{r}
#| label: apply-legend
#| eval: false
```
:::

::: {.subsection .center}
## Step 5
### Final touches
:::

-------------------------------------------------------------------------------

::: panel-tabset
### Plot

```{r}
#| label: apply-final-touches
#| echo: false

palmerpenguins::penguins |> 
    ggplot(aes(x = bill_length_mm, y = bill_depth_mm, color = body_mass_g)) + 
    geom_point(alpha = 0.6, size = 1.5) + 
    labs(title = "Bill size of brush-tailed penguins _Pygoscelis_",
         caption = "Data: Gorman, Williams & Fraser (2014), _PLoS ONE_", 
         x = "**Bill length** (mm)",
         y = "**Bill depth** (mm)",
         color = "**Body mass** (g)") +
    scale_x_continuous(limits = c(30, 60)) + 
    scale_y_continuous(limits = c(12, 24)) +
    scale_color_scico(palette = "bamako", direction = -1, 
                      guide = guide_colorbar(title.position = "top", title.hjust = .5, 
                                             ticks = FALSE, 
                                             barwidth = 15, barheight = 0.5)) +
    coord_cartesian(expand = FALSE, clip = "off") +
    theme_minimal() +
    theme(plot.title = element_markdown(size = 18, face = "bold"),
          plot.title.position = "plot",
          plot.caption = element_markdown(margin = margin(t = 15)), 
          plot.caption.position = "plot",
          legend.position = "top",
          legend.title = element_markdown(),
          axis.title.x = element_markdown(),
          axis.title.y = element_markdown(),
          plot.margin = margin(15, 15, 5, 15))
```

### Code

```{r}
#| label: apply-final-touches
#| eval: false
```
:::

::: {.chapter .center style="margin-left: 10vw;"}
## Chapter 4
### "How to make the PNG file look like it does in my RStudio thingy"
:::

::: {.center}
## Three things to consider

- Format
- Size
- Resolution
:::

-------------------------------------------------------------------------------

::: {style="margin-top: 1em"}
:::

```{r}
#| label: ggsave-default
#| eval: false

ggsave(filename = "plots/plot_penguins.png", bg = "white")
```

::: panel-tabset
```{r}
#| label: ggsave-default-show
#| fig-width: 4.09
#| fig-height: 3.21
#| dpi: 150
#| echo: false

last_plot()
```
:::

-------------------------------------------------------------------------------

::: {style="margin-top: 1em"}
:::

```{r}
#| label: ggsave-size
#| eval: false

ggsave(filename = "plots/plot_penguins.png", width = 7, height = 4, bg = "white")
```

::: panel-tabset
```{r}
#| label: ggsave-size-show
#| fig-width: 7
#| fig-height: 4
#| echo: false

last_plot()
```
:::

-------------------------------------------------------------------------------

::: {style="margin-top: 1em"}
:::

```{r}
#| label: ggsave-res
#| eval: false

ggsave(filename = "plots/plot_penguins.png", width = 7, height = 4, dpi = 300, bg = "white")
```

::: panel-tabset
```{r}
#| label: ggsave-res-show
#| fig-width: 7
#| fig-height: 4
#| dpi: 300
#| echo: false

last_plot()
```
:::

::: {.chapter .center}
## Chapter 5
### Correlation plots are hard
:::

## Creating a correlation matrix
```{r}
#| label: corr-matrix

corr_matrix <- palmerpenguins::penguins_raw |> 
    janitor::clean_names() |> 
    select(culmen_length_mm:body_mass_g) |> 
    cor(use="complete.obs") |> 
    as.data.frame() |> 
    rownames_to_column(var = "var1") |> 
    pivot_longer(cols = 2:last_col(), names_to = "var2", values_to = "cor")

corr_matrix
```

-------------------------------------------------------------------------------

::: panel-tabset
### Plot

```{r}
#| label: corr-plot-intro
#| fig-height: 3.25

corr_matrix |> 
    ggplot(aes(x = var1, y = var2, fill = cor, label = round(cor, 2))) + 
    geom_tile() +
    geom_text() + 
    scale_fill_scico(palette = "vik", limits = c(-1, 1)) + 
    theme_minimal()
```

### Code

```{r}
#| label: corr-plot-intro
#| eval: false
```
:::

-------------------------------------------------------------------------------

::: panel-tabset
### Plot

```{r}
#| label: corr-plot
#| echo: false

corr_matrix |> 
    mutate(across(c(var1, var2), ~ str_replace_all(.x, "_", " ")),
           across(c(var1, var2), ~ str_replace_all(.x, "mm", "(mm)")),
           across(c(var1, var2), ~ str_replace_all(.x, "g$", "(g)")),
           across(c(var1, var2), ~ str_to_sentence(.x))) |> 
    ggplot(aes(x = var1, y = var2, fill = cor)) + 
    geom_tile(data = . %>% filter(var1 != var2)) + 
    geom_point(data = . %>% filter(var1 == var2), shape = 4, size = 12) +
    geom_text(data = . %>% filter(var1 != var2), aes(label = round(cor,2)), size = 2.5) + 
    labs(title = "Correlation between body dimensions of _Pygoscelis_",
         x = NULL,
         y = NULL,
         fill = "Corr (r~g~)") +
    scale_x_discrete(limits = rev) + 
    scale_fill_scico(palette = "vik", limits = c(-1, 1),
                     guide = guide_colorbar(barwidth = 0.75, barheight = 10, ticks = FALSE)) +
    coord_equal() +
    theme_minimal() +
    theme(panel.grid = element_blank(),
          plot.title = element_markdown(size = 12, face = "bold"),
          plot.title.position = "plot",
          legend.title = element_markdown(face = "bold"),
          axis.text.x = element_markdown(angle = 45, hjust = 1),
          axis.title.y = element_markdown(),
          plot.margin = margin(15, 15, 5, 15))
```

### Code

```{r}
#| label: corr-plot
#| eval: false
```
:::

::: {.chapter .center}
## Chapter 6
### Enhancing boxplots
:::

-------------------------------------------------------------------------------

::: panel-tabset
### Plot

```{r}
#| label: boxplot-plot-intro
#| fig-height: 3

palmerpenguins::penguins |> 
    ggplot(aes(x = species, y = body_mass_g)) + 
    geom_boxplot() +
    theme_minimal()
```

### Code

```{r}
#| label: boxplot-plot-intro
#| eval: false
```
:::

-------------------------------------------------------------------------------

::: panel-tabset
### Plot

```{r}
#| label: raincloud-plot-intro
#| fig-height: 3

palmerpenguins::penguins |> 
    ggplot(aes(x = species, y = body_mass_g)) + 
    geom_boxplot(width = 0.2, outlier.shape = NA) + 
    geom_jitter(width = 0.05, alpha = 0.3) + 
    ggdist::stat_halfeye(adjust = 0.5, width = 0.7, .width = 0, 
                         justification = -0.2, point_colour = NA) +
    theme_minimal()
```

### Code

```{r}
#| label: raincloud-plot-intro
#| eval: false
```
:::

-------------------------------------------------------------------------------

::: panel-tabset
### Plot

```{r}
#| label: raincloud-plot
#| echo: false

palmerpenguins::penguins |> 
    ggplot(aes(x = species, y = body_mass_g)) + 
    geom_boxplot(width = 0.2, outlier.shape = NA) + 
    geom_jitter(aes(color = species), width = 0.05, alpha = 0.3, key_glyph = "point") + 
    ggdist::stat_halfeye(aes(fill = species), adjust = 0.5, width = 0.7, .width = 0, 
                         justification = -0.2, point_colour = NA) +
    labs(title = "Body mass in grams by species<br>for brush-tailed penguins _Pygoscelis_",
         x = NULL,
         y = "**Body mass** (_g_)",
         color = NULL) +
    scale_y_continuous(labels = scales::label_number(big.mark = "", suffix = " g"), 
                       expand = expansion(add = c(500))) + 
    scale_color_brewer(palette = "Dark2", guide = guide_legend(override.aes = list(alpha = 1, size = 6))) + 
    scale_fill_brewer(palette = "Dark2", guide = "none") +
    theme_minimal() +
    theme(plot.title = element_markdown(size = 18, face = "bold"),
          plot.title.position = "plot",
          legend.position = "top",
          legend.text = element_markdown(face = "italic"),
          axis.text.x = element_markdown(face = "bold"),
          axis.title.y = element_markdown(),
          plot.margin = margin(15, 15, 10, 15))
```

### Code

```{r}
#| label: raincloud-plot
#| eval: false
```
:::


::: {.chapter .center}
## Chapter 7
### Where to find inspiration?
:::

## Where to find examples?

::: {style="text-align: center; margin-top: 20vh"}
[The R Graph Gallery](https://r-graph-gallery.com){preview-link="true" style="text-align: center"}

[The Python Graph Gallery](https://www.python-graph-gallery.com){preview-link="true" style="text-align: center"}

Your colleagues

Google?
:::

::: {.chapter .center}
## [Data before aesthetics]{.flashing}
:::

## Acknowledgements {preview-link="true"}

::: {.midlist}
[Cédric Scherer](https://www.cedricscherer.com) for creating excellent inspirational and [teaching resources](https://www.cedricscherer.com/2022/08/09/2-day-workshop-on-graphic-design-with-ggplot2-at-rstudioconf-2022/) for `{ggplot2}`, see also [here](https://github.com/rstudio-conf-2022/ggplot2-graphic-design) and [here](https://github.com/z3tt/OutlierConf2021) 

[Linn-Sofie Sæther](https://twitter.com/linnssaether) for helping set the curriculum

This presentation was created using [Quarto](https://quarto.org/docs/presentations/revealjs/), see [here](https://github.com/danielroelfs/slides/blob/main/2022-11-16-phd-club-seminar/phd-club-seminar-slides/index.qmd) for the source code for this presentation
:::

## Resources {preview-link="true"}

::: {.midlist style="font-size: 3vmin;"}
**How to dodge the pitfalls of bad illustrations**, Chris Woolston, _Nature_ (2014), [10.1038/nature.2014.15999](https://doi.org/10.1038/nature.2014.15999)

**Ten Simple Rules for Better Figures**, Nicolas P. Rougier, Michael Droettboom, and Philip E. Bourne, _PLOS Computational Biology_ (2014), [10.1371/journal.pcbi.1003833](https://doi.org/10.1371/journal.pcbi.1003833)

**The misuse of colour in science communication**, Fabio Crameri, Grace E. Shephard, and Philip J. Heron, _Nature Communications_ (2020), [10.1038/s41467-020-19160-7](https://doi.org/10.1038/s41467-020-19160-7)

**`{ggtext}` package**, Claus Wilke, [github.com/wilkelab/ggtext](https://github.com/wilkelab/ggtext)

**`{scico}` package**, Thomas Lin Pedersen, [github.com/thomasp85/scico](https://github.com/thomasp85/scico)
:::

-------------------------------------------------------------------------------

::: {.chapter .center}
### Thank you!
:::

## {visibility="hidden"}

::: panel-tabset
### Plot

```{r}
#| label: area-vs-size
#| fig-height: 3
#| fig-width: 8
#| echo: false

(tibble(x = seq(5), y = rep(0,5), size = c(5, 10, 15, 20, 30)) |> 
     ggplot(aes(x = -x, y = y, size = size)) +
     geom_point(color = "navyblue") + 
     labs(title = "Size as area") +
     scale_size_area(max_size = 30, guide = "none")) /
    (tibble(x = seq(5), y = rep(0,5), size = c(5, 10, 15, 20, 30)) |> 
         ggplot(aes(x = -x, y = y, size = size)) +
         geom_point(color = "maroon") +  
         labs(title = "Size as radius") +
         scale_radius(range = c(5, 30), guide = "none")) &
    geom_text(aes(label = size), size = 5, color = "white") &
    scale_x_continuous(expand = expansion(add = 2)) &
    theme_void() +
    theme(plot.title = element_text(hjust = 0.5),
          plot.background = element_rect(fill = "transparent", color = "transparent"))
```

### Code

```{r}
#| label: area-vs-size
#| eval: false
```
:::
