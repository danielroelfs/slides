#-- Create plot ------------------------
plotdata %>%
ggplot(aes(x = reorder(ic_1_label,ic_1_num), y = reorder(ic_2_label,ic_2_num), fill = loading * 2.5)) +
geom_tile(color = "transparent") +
geom_point(data = diag_data, shape = 4, size = 3, color = "#333333") +
labs(x = NULL,
y = NULL) +
scale_x_discrete(position = "top") +
scale_y_discrete() +
scale_fill_norment(palette = "vik", limits = c(-1,1), na.value = "transparent") +
coord_equal() +
theme_void() +
theme(text = element_text(family = "Poppins"),
axis.text.x = element_markdown(face = "bold", size = 48),
axis.text.y = element_markdown(color = "#333333", face = "bold", size = 48),
panel.grid.major = element_blank(),
plot.margin = margin(0,5,0,5, unit = "pt"),
legend.position = "none")
#-- Save plot ------------------------
ggsave("simulated_ldsc_matrix.png", width = 1200, height = 1200, units = "px", dpi = 600)
### SIMULATE LDSC MATRIX ########################
#-- Libraries -------------------------
library(tidyverse)
library(ggtext)
library(showtext)
library(normentR)
#-- Generate data ------------------------
font_add_google(name = "Poppins", family = "Poppins")
showtext_auto()
set.seed(28)
data <- simulate_corr_matrix(5) %>%
as_tibble() %>%
janitor::clean_names() %>%
rownames_to_column("ic_1") %>%
mutate(ic_1 = as.numeric(ic_1)) %>%
pivot_longer(starts_with("v"), names_to = "ic_2", values_to = "loading") %>%
mutate(ic_1_num = ic_1,
ic_2_num = parse_number(ic_2),
ic_1 = str_glue("IC{ic_1_num}"),
ic_2 = str_glue("IC{ic_2_num}"))
ic_names <- tibble(
ic_num = seq(5),
color = c("#9874b2","#ef87b5","#68aee1","#96c9bf","#e7e783")
)
#-- Prepare data ------------------------
plotdata <- data %>%
left_join(ic_names, by = c("ic_1_num" = "ic_num")) %>%
rename(color_ic_1 = color) %>%
left_join(ic_names, by = c("ic_2_num" = "ic_num")) %>%
rename(color_ic_2 = color) %>%
mutate(ic_1_label = str_glue("<span style='color: {color_ic_1}'>{ic_1}</span>"),
ic_2_label = str_glue("<span style='color: {color_ic_2}'>{ic_2}</span>"))
diag_data <- plotdata %>%
filter(is.na(loading))
#-- Create plot ------------------------
plotdata %>%
ggplot(aes(x = reorder(ic_1_label,ic_1_num), y = reorder(ic_2_label,ic_2_num), fill = loading * 2.5)) +
geom_tile(color = "transparent") +
geom_point(data = diag_data, shape = 4, size = 3, color = "#333333") +
labs(x = NULL,
y = NULL) +
scale_x_discrete(position = "top") +
scale_y_discrete() +
scale_fill_norment(palette = "vik", limits = c(-1,1), na.value = "transparent") +
coord_equal() +
theme_void() +
theme(text = element_text(family = "Poppins"),
axis.text.x = element_markdown(face = "bold", size = 48),
axis.text.y = element_markdown(color = "#333333", face = "bold", size = 48),
panel.grid.major = element_blank(),
plot.margin = margin(0,5,0,5, unit = "pt"),
legend.position = "none")
#-- Save plot ------------------------
ggsave("simulated_ldsc_matrix.png", width = 1200, height = 1200, units = "px", dpi = 600)
### SIMULATE LDSC MATRIX ########################
#-- Libraries -------------------------
library(tidyverse)
library(ggtext)
library(showtext)
library(normentR)
#-- Generate data ------------------------
font_add_google(name = "Poppins", family = "Poppins")
showtext_auto()
set.seed(24)
data <- simulate_corr_matrix(5) %>%
as_tibble() %>%
janitor::clean_names() %>%
rownames_to_column("ic_1") %>%
mutate(ic_1 = as.numeric(ic_1)) %>%
pivot_longer(starts_with("v"), names_to = "ic_2", values_to = "loading") %>%
mutate(ic_1_num = ic_1,
ic_2_num = parse_number(ic_2),
ic_1 = str_glue("IC{ic_1_num}"),
ic_2 = str_glue("IC{ic_2_num}"))
ic_names <- tibble(
ic_num = seq(5),
color = c("#9874b2","#ef87b5","#68aee1","#96c9bf","#e7e783")
)
#-- Prepare data ------------------------
plotdata <- data %>%
left_join(ic_names, by = c("ic_1_num" = "ic_num")) %>%
rename(color_ic_1 = color) %>%
left_join(ic_names, by = c("ic_2_num" = "ic_num")) %>%
rename(color_ic_2 = color) %>%
mutate(ic_1_label = str_glue("<span style='color: {color_ic_1}'>{ic_1}</span>"),
ic_2_label = str_glue("<span style='color: {color_ic_2}'>{ic_2}</span>"))
diag_data <- plotdata %>%
filter(is.na(loading))
#-- Create plot ------------------------
plotdata %>%
ggplot(aes(x = reorder(ic_1_label,ic_1_num), y = reorder(ic_2_label,ic_2_num), fill = loading * 2.5)) +
geom_tile(color = "transparent") +
geom_point(data = diag_data, shape = 4, size = 3, color = "#333333") +
labs(x = NULL,
y = NULL) +
scale_x_discrete(position = "top") +
scale_y_discrete() +
scale_fill_norment(palette = "vik", limits = c(-1,1), na.value = "transparent") +
coord_equal() +
theme_void() +
theme(text = element_text(family = "Poppins"),
axis.text.x = element_markdown(face = "bold", size = 48),
axis.text.y = element_markdown(color = "#333333", face = "bold", size = 48),
panel.grid.major = element_blank(),
plot.margin = margin(0,5,0,5, unit = "pt"),
legend.position = "none")
#-- Save plot ------------------------
ggsave("simulated_ldsc_matrix.png", width = 1200, height = 1200, units = "px", dpi = 600)
### SIMULATE LDSC MATRIX ########################
#-- Libraries -------------------------
library(tidyverse)
library(ggtext)
library(showtext)
library(normentR)
#-- Generate data ------------------------
font_add_google(name = "Poppins", family = "Poppins")
showtext_auto()
set.seed(16)
data <- simulate_corr_matrix(5) %>%
as_tibble() %>%
janitor::clean_names() %>%
rownames_to_column("ic_1") %>%
mutate(ic_1 = as.numeric(ic_1)) %>%
pivot_longer(starts_with("v"), names_to = "ic_2", values_to = "loading") %>%
mutate(ic_1_num = ic_1,
ic_2_num = parse_number(ic_2),
ic_1 = str_glue("IC{ic_1_num}"),
ic_2 = str_glue("IC{ic_2_num}"))
ic_names <- tibble(
ic_num = seq(5),
color = c("#9874b2","#ef87b5","#68aee1","#96c9bf","#e7e783")
)
#-- Prepare data ------------------------
plotdata <- data %>%
left_join(ic_names, by = c("ic_1_num" = "ic_num")) %>%
rename(color_ic_1 = color) %>%
left_join(ic_names, by = c("ic_2_num" = "ic_num")) %>%
rename(color_ic_2 = color) %>%
mutate(ic_1_label = str_glue("<span style='color: {color_ic_1}'>{ic_1}</span>"),
ic_2_label = str_glue("<span style='color: {color_ic_2}'>{ic_2}</span>"))
diag_data <- plotdata %>%
filter(is.na(loading))
#-- Create plot ------------------------
plotdata %>%
ggplot(aes(x = reorder(ic_1_label,ic_1_num), y = reorder(ic_2_label,ic_2_num), fill = loading * 2.5)) +
geom_tile(color = "transparent") +
geom_point(data = diag_data, shape = 4, size = 3, color = "#333333") +
labs(x = NULL,
y = NULL) +
scale_x_discrete(position = "top") +
scale_y_discrete() +
scale_fill_norment(palette = "vik", limits = c(-1,1), na.value = "transparent") +
coord_equal() +
theme_void() +
theme(text = element_text(family = "Poppins"),
axis.text.x = element_markdown(face = "bold", size = 48),
axis.text.y = element_markdown(color = "#333333", face = "bold", size = 48),
panel.grid.major = element_blank(),
plot.margin = margin(0,5,0,5, unit = "pt"),
legend.position = "none")
#-- Save plot ------------------------
ggsave("simulated_ldsc_matrix.png", width = 1200, height = 1200, units = "px", dpi = 600)
library(tidyverse)
library(normentR)
reorder_within <- function(x, by, within, fun = mean, sep = "___", ...) {
new_x <- paste(x, within, sep = sep)
stats::reorder(new_x, by, FUN = fun)
}
scale_x_reordered <- function(..., sep = "___") {
reg <- paste0(sep, ".+$")
scale_x_discrete(labels = function(x) gsub(reg, "", x), ...)
}
ldsc <- read.table("~/Dropbox/NORMENT/R_Scripts/ICA_genetics/files/LDSC_stats.txt", header = TRUE) %>%
mutate(p.fdr = p.adjust(p, method = "fdr"),
p.bonf = p.adjust(p, method = "bonferroni"))
gwas_names <- read_delim("~/Dropbox/NORMENT/R_Scripts/ICA_genetics/files/GWAS_names.txt", delim = "\t")
ic_defs <- read_delim("files/IC_names.txt", delim = "\t")
ic_defs <- read_delim("~/Dropbox/NORMENT/R_Scripts/ICA_genetics/files/IC_names.txt", delim = "\t")
reorder_within <- function(x, by, within, fun = mean, sep = "___", ...) {
new_x <- paste(x, within, sep = sep)
stats::reorder(new_x, by, FUN = fun)
}
scale_x_reordered <- function(..., sep = "___") {
reg <- paste0(sep, ".+$")
scale_x_discrete(labels = function(x) gsub(reg, "", x), ...)
}
ldsc <- read.table("~/Dropbox/NORMENT/R_Scripts/ICA_genetics/files/LDSC_stats.txt", header = TRUE) %>%
mutate(p.fdr = p.adjust(p, method = "fdr"),
p.bonf = p.adjust(p, method = "bonferroni"))
gwas_names <- read_delim("~/Dropbox/NORMENT/R_Scripts/ICA_genetics/files/GWAS_names.txt", delim = "\t")
ic_defs <- read_delim("~/Dropbox/NORMENT/R_Scripts/ICA_genetics/files/IC_names.txt", delim = "\t")
plotdata <- ldsc %>%
right_join(gwas_names, by = "diagnosis") %>%
right_join(ic_defs, by = "component") %>%
mutate(rg_inv = rg * trans,
comp_new = paste0("IC",parse_number(comp_label)))
plotdata <- plotdata %>%
mutate(comp_new = fct_reorder(comp_new,parse_number(comp_label)),
comp_def = fct_reorder(comp_def,parse_number(comp_label)),
comp_new = fct_drop(comp_new),
comp_def = fct_drop(comp_def))
p <- ggplot(plotdata, aes(x = reorder_within(comp_new,-abs(rg), diagnosis_new),
y = 1, fill = rg_inv)) +
geom_point(shape = 22, aes(size = se), color = "transparent") +
geom_point(data = . %>% filter(p.fdr < 0.05), aes(size = se),
shape = 22, color = "black", stroke = 1.5) +
geom_text(aes(label = comp_new),  vjust = -0.5, fontface = "bold") +
geom_text(aes(label = sprintf("(%s)",round(rg_inv,2))), vjust = 1) +
labs(x = "Rank",
y = NULL,
fill = bquote("Genetic correlation "~(r[g])),
size = "Standard Error",
caption = bquote("Genetic correlation"~(r[g])~"shown in brackets below")) +
scale_discrete_identity(
aesthetics = "label",
name = NULL,
breaks = levels(plotdata$comp_new),
labels = levels(plotdata$comp_def),
guide = "legend"
) +
scale_x_reordered(position = "top") +
scale_y_continuous(labels = NULL) +
scale_fill_norment(discrete = FALSE, palette = "vik", limits = c(-1,1),
guide = guide_colorbar(nbin = 100, barheight = 0.75, barwidth = 15, reverse = FALSE,
direction = "horizontal",
ticks = FALSE, title.vjust = 1, order = 2)) +
scale_size_continuous(range = c(6,20), trans = "reverse",
guide = guide_legend(order = 3, direction = "horizontal", label.position = "bottom",
override.aes = list(fill = "grey80"))) +
guides(label = guide_legend(order = 1, keywidth = 2, nrow = 5, key.hjust = 1, override.aes = list(size = 4))) +
theme_norment(grid = FALSE, base_size = 12, axis_title_size = 14, bg_col = "transparent") +
coord_cartesian() +
theme(
legend.position = "bottom",
legend.direction = "horizontal",
legend.box = "vertical",
legend.text = element_text(size = 12),
axis.text = element_text(colour = "black"),
axis.text.x = element_blank(),
strip.text.y.left = element_text(angle = 0, hjust = 1),
panel.spacing.y = unit(0, "lines")
) +
facet_wrap(~ reorder(diagnosis_new, -abs(rg)), scales = "free",
strip.position = "left", ncol = 1)
p
p <- ggplot(plotdata, aes(x = reorder_within(comp_new,-abs(rg), diagnosis_new),
y = 1, fill = rg_inv)) +
geom_point(shape = 22, aes(size = se), color = "transparent") +
geom_point(data = . %>% filter(p.fdr < 0.05), aes(size = se),
shape = 22, color = "black", stroke = 1.5) +
geom_text(aes(label = comp_new),  vjust = -0.5, fontface = "bold") +
geom_text(aes(label = sprintf("(%s)",round(rg_inv,2))), vjust = 1) +
labs(x = "Rank",
y = NULL,
fill = bquote("Genetic correlation "~(r[g])),
size = "Standard Error",
caption = bquote("Genetic correlation"~(r[g])~"shown in brackets below")) +
scale_discrete_identity(
aesthetics = "label",
name = NULL,
breaks = levels(plotdata$comp_new),
labels = levels(plotdata$comp_def),
guide = "legend"
) +
scale_x_reordered(position = "top") +
scale_y_continuous(labels = NULL) +
scale_fill_norment(discrete = FALSE, palette = "vik", limits = c(-1,1),
guide = guide_colorbar(nbin = 100, barheight = 0.75, barwidth = 15, reverse = FALSE,
direction = "horizontal",
ticks = FALSE, title.vjust = 1, order = 2)) +
scale_size_continuous(range = c(6,20), trans = "reverse",
guide = guide_legend(order = 3, direction = "horizontal", label.position = "bottom",
override.aes = list(fill = "grey80"))) +
guides(label = guide_legend(order = 1, keywidth = 2, nrow = 5, key.hjust = 1, override.aes = list(size = 4))) +
theme_norment(grid = FALSE, base_size = 12, axis_title_size = 14, bg_col = "transparent") +
coord_cartesian() +
theme(
legend.position = "right",
legend.direction = "horizontal",
legend.box = "vertical",
legend.text = element_text(size = 12),
axis.text = element_text(colour = "black"),
axis.text.x = element_blank(),
strip.text.y.left = element_text(angle = 0, hjust = 1),
panel.spacing.y = unit(0, "lines")
) +
facet_wrap(~ reorder(diagnosis_new, -abs(rg)), scales = "free",
strip.position = "left", ncol = 1)
p
ggsave("files/LDSC_stats_matrix.png", p, width = 20, height = 8, dpi = 600)
getwd()
ggsave("LDSC_stats_matrix.png", p, width = 20, height = 8, dpi = 600)
p <- ggplot(plotdata, aes(x = reorder_within(comp_new,-abs(rg), diagnosis_new),
y = 1, fill = rg_inv)) +
geom_point(shape = 22, aes(size = se), color = "transparent") +
geom_point(data = . %>% filter(p.fdr < 0.05), aes(size = se),
shape = 22, color = "black", stroke = 1.5) +
geom_text(aes(label = comp_new),  vjust = -0.5, fontface = "bold") +
geom_text(aes(label = sprintf("(%s)",round(rg_inv,2))), vjust = 1) +
labs(x = "Rank",
y = NULL,
fill = bquote("Genetic correlation "~(r[g])),
size = "Standard Error",
caption = bquote("Genetic correlation"~(r[g])~"shown in brackets below")) +
scale_discrete_identity(
aesthetics = "label",
name = NULL,
breaks = levels(plotdata$comp_new),
labels = levels(plotdata$comp_def),
guide = "legend"
) +
scale_x_reordered(position = "top") +
scale_y_continuous(labels = NULL) +
scale_fill_norment(discrete = FALSE, palette = "vik", limits = c(-1,1),
guide = guide_colorbar(nbin = 100, barheight = 0.75, barwidth = 15, reverse = FALSE,
direction = "horizontal",
ticks = FALSE, title.vjust = 1, order = 2)) +
scale_size_continuous(range = c(6,20), trans = "reverse",
guide = guide_legend(order = 3, direction = "horizontal", label.position = "bottom",
override.aes = list(fill = "grey80"))) +
guides(label = guide_legend(order = 1, keywidth = 2, nrow = 6, key.hjust = 1, override.aes = list(size = 4))) +
theme_norment(grid = FALSE, base_size = 12, axis_title_size = 14, bg_col = "transparent") +
coord_cartesian() +
theme(
legend.position = "right",
legend.direction = "horizontal",
legend.box = "vertical",
legend.text = element_text(size = 12),
axis.text = element_text(colour = "black"),
axis.text.x = element_blank(),
strip.text.y.left = element_text(angle = 0, hjust = 1),
panel.spacing.y = unit(0, "lines")
) +
facet_wrap(~ reorder(diagnosis_new, -abs(rg)), scales = "free",
strip.position = "left", ncol = 1)
library(tidyverse)
library(normentR)
reorder_within <- function(x, by, within, fun = mean, sep = "___", ...) {
new_x <- paste(x, within, sep = sep)
stats::reorder(new_x, by, FUN = fun)
}
scale_x_reordered <- function(..., sep = "___") {
reg <- paste0(sep, ".+$")
scale_x_discrete(labels = function(x) gsub(reg, "", x), ...)
}
ldsc <- read.table("~/Dropbox/NORMENT/R_Scripts/ICA_genetics/files/LDSC_stats.txt", header = TRUE) %>%
mutate(p.fdr = p.adjust(p, method = "fdr"),
p.bonf = p.adjust(p, method = "bonferroni"))
gwas_names <- read_delim("~/Dropbox/NORMENT/R_Scripts/ICA_genetics/files/GWAS_names.txt", delim = "\t")
ic_defs <- read_delim("~/Dropbox/NORMENT/R_Scripts/ICA_genetics/files/IC_names.txt", delim = "\t")
plotdata <- ldsc %>%
right_join(gwas_names, by = "diagnosis") %>%
right_join(ic_defs, by = "component") %>%
mutate(rg_inv = rg * trans,
comp_new = paste0("IC",parse_number(comp_label)))
plotdata <- plotdata %>%
mutate(comp_new = fct_reorder(comp_new,parse_number(comp_label)),
comp_def = fct_reorder(comp_def,parse_number(comp_label)),
comp_new = fct_drop(comp_new),
comp_def = fct_drop(comp_def))
p <- ggplot(plotdata, aes(x = reorder_within(comp_new,-abs(rg), diagnosis_new),
y = 1, fill = rg_inv)) +
geom_point(shape = 22, aes(size = se), color = "transparent") +
geom_point(data = . %>% filter(p.fdr < 0.05), aes(size = se),
shape = 22, color = "black", stroke = 1.5) +
geom_text(aes(label = comp_new),  vjust = -0.5, fontface = "bold") +
geom_text(aes(label = sprintf("(%s)",round(rg_inv,2))), vjust = 1) +
labs(x = "Rank",
y = NULL,
fill = bquote("Genetic correlation "~(r[g])),
size = "Standard Error",
caption = bquote("Genetic correlation"~(r[g])~"shown in brackets below")) +
scale_discrete_identity(
aesthetics = "label",
name = NULL,
breaks = levels(plotdata$comp_new),
labels = levels(plotdata$comp_def),
guide = "legend"
) +
scale_x_reordered(position = "top") +
scale_y_continuous(labels = NULL) +
scale_fill_norment(discrete = FALSE, palette = "vik", limits = c(-1,1),
guide = guide_colorbar(nbin = 100, barheight = 0.75, barwidth = 15, reverse = FALSE,
direction = "horizontal",
ticks = FALSE, title.vjust = 1, order = 2)) +
scale_size_continuous(range = c(6,20), trans = "reverse",
guide = guide_legend(order = 3, direction = "horizontal", label.position = "bottom",
override.aes = list(fill = "grey80"))) +
guides(label = guide_legend(order = 1, keywidth = 2, nrow = 6, key.hjust = 1, override.aes = list(size = 4))) +
theme_norment(grid = FALSE, base_size = 12, axis_title_size = 14, bg_col = "transparent") +
coord_cartesian() +
theme(
legend.position = "right",
legend.direction = "horizontal",
legend.box = "vertical",
legend.text = element_text(size = 12),
axis.text = element_text(colour = "black"),
axis.text.x = element_blank(),
strip.text.y.left = element_text(angle = 0, hjust = 1),
panel.spacing.y = unit(0, "lines")
) +
facet_wrap(~ reorder(diagnosis_new, -abs(rg)), scales = "free",
strip.position = "left", ncol = 1)
p
p <- ggplot(plotdata, aes(x = reorder_within(comp_new,-abs(rg), diagnosis_new),
y = 1, fill = rg_inv)) +
geom_point(shape = 22, aes(size = se), color = "transparent") +
geom_point(data = . %>% filter(p.fdr < 0.05), aes(size = se),
shape = 22, color = "black", stroke = 1.5) +
geom_text(aes(label = comp_new),  vjust = -0.5, fontface = "bold") +
geom_text(aes(label = sprintf("(%s)",round(rg_inv,2))), vjust = 1) +
labs(x = "Rank",
y = NULL,
fill = bquote("Genetic correlation "~(r[g])),
size = "Standard Error",
caption = bquote("Genetic correlation"~(r[g])~"shown in brackets below")) +
scale_discrete_identity(
aesthetics = "label",
name = NULL,
breaks = levels(plotdata$comp_new),
labels = levels(plotdata$comp_def),
guide = "legend"
) +
scale_x_reordered(position = "top") +
scale_y_continuous(labels = NULL) +
scale_fill_norment(discrete = FALSE, palette = "vik", limits = c(-1,1),
guide = guide_colorbar(nbin = 100, barheight = 0.75, barwidth = 15, reverse = FALSE,
direction = "horizontal",
ticks = FALSE, title.vjust = 1, order = 2)) +
scale_size_continuous(range = c(6,20), trans = "reverse",
guide = guide_legend(order = 3, direction = "horizontal", label.position = "bottom",
override.aes = list(fill = "grey80"))) +
guides(label = guide_legend(order = 1, keywidth = 2, ncol = 2, key.hjust = 1, override.aes = list(size = 4))) +
theme_norment(grid = FALSE, base_size = 12, axis_title_size = 14, bg_col = "transparent") +
coord_cartesian() +
theme(
legend.position = "right",
legend.direction = "horizontal",
legend.box = "vertical",
legend.text = element_text(size = 12),
axis.text = element_text(colour = "black"),
axis.text.x = element_blank(),
strip.text.y.left = element_text(angle = 0, hjust = 1),
panel.spacing.y = unit(0, "lines")
) +
facet_wrap(~ reorder(diagnosis_new, -abs(rg)), scales = "free",
strip.position = "left", ncol = 1)
p
p <- ggplot(plotdata, aes(x = reorder_within(comp_new,-abs(rg), diagnosis_new),
y = 1, fill = rg_inv)) +
geom_point(shape = 22, aes(size = se), color = "transparent") +
geom_point(data = . %>% filter(p.fdr < 0.05), aes(size = se),
shape = 22, color = "black", stroke = 1.5) +
geom_text(aes(label = comp_new),  vjust = -0.5, fontface = "bold") +
geom_text(aes(label = sprintf("(%s)",round(rg_inv,2))), vjust = 1) +
labs(x = "Rank",
y = NULL,
fill = bquote("Genetic correlation "~(r[g])),
size = "Standard Error",
caption = bquote("Genetic correlation"~(r[g])~"shown in brackets below")) +
scale_discrete_identity(
aesthetics = "label",
name = NULL,
breaks = levels(plotdata$comp_new),
labels = levels(plotdata$comp_def),
guide = "legend"
) +
scale_x_reordered(position = "top") +
scale_y_continuous(labels = NULL) +
scale_fill_norment(discrete = FALSE, palette = "vik", limits = c(-1,1),
guide = guide_colorbar(nbin = 100, barheight = 0.75, barwidth = 15, reverse = FALSE,
direction = "horizontal",
ticks = FALSE, title.vjust = 1, order = 2)) +
scale_size_continuous(range = c(6,20), trans = "reverse",
guide = guide_legend(order = 3, direction = "horizontal", label.position = "bottom",
override.aes = list(fill = "grey80"))) +
guides(label = guide_legend(order = 1, keywidth = 2, ncol = 2, key.hjust = 1, override.aes = list(size = 4))) +
theme_norment(grid = FALSE, base_size = 12, axis_title_size = 14, bg_col = "transparent") +
coord_cartesian() +
theme(
legend.position = "right",
legend.direction = "horizontal",
legend.box = "vertical",
legend.text = element_text(size = 12),
axis.text = element_text(colour = "black"),
axis.text.x = element_blank(),
strip.text.y.left = element_text(angle = 0, hjust = 1),
panel.spacing.y = unit(0, "lines")
) +
facet_wrap(~ reorder(diagnosis_new, -abs(rg)), scales = "free",
strip.position = "left", ncol = 1)
ggsave("LDSC_stats_matrix.png", p, width = 20, height = 8, dpi = 600)
